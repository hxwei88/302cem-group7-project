<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-07-07 at 12:02:43.
 */
require_once '../../302cem-group7-project/public/php/stock.php';
require_once '../../302cem-group7-project/public/php/detail_product.php';
require_once '../../302cem-group7-project/public/php/stock_update_book.php';
require_once '../../302cem-group7-project/public/php/stock_delete_book.php';

class admin_stockIntegrationTest extends PHPUnit\Framework\TestCase
{
    /**
     * @var Add_Order_History
     */
    protected $object1;
    protected $object2;
    protected $object3;
    protected $object4;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object1 = new Stock;
        $this->object2 = new Detail_Product;
        $this->object3 = new Stock_Update_Book;
        $this->object4 = new Stock_Delete_Book;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers Add_Order_History::main
     * @todo   Implement testMain().
     */
    public function testGetBooksData()
    {
        //1st unit
        $response1 = $this->object1->main();
        $this->assertTrue($response1);
    }
    
    public function testGetBookDetail() {
        //2nd unit
        $_POST = array('isbn' => "test");
        $response2 = $this->object2->main();
        $this->assertTrue($response2);
    }
    
    public function testUpdateBook() {
        //3rd unit
        $_FILES['detail-image'] = array('name' => 'default_book.png', 'size'=>1000, 'tmp_name' => 'C:\xampp\tmp\default_book.png');
        $_POST = array('old_isbn'=>"test",'detail-isbn'=>"test123", 'detail-name-input'=>"nameTest2", 
            'detail-author-input'=>"authorTest2", 'detail-date'=>"dateTest2", 'detail-des'=>"descTest2", 
            'detail-tp'=>12, 'detail-rp'=>12, 'detail-quantity'=>12);
        
        $expected1 = json_encode(array("status"=>1, "message"=>"The book with ISBN: test has been updated."));
        $this->expectOutputString($expected1);
        $this->object3->main();
    }
    
    public function testDeleteBook() {
        //4th unit
        $_POST = array("isbn"=>"test123", "image"=>"../resources/images/default_book.png");
        
        $expected2 = json_encode(array("status"=>1, "message"=>"The book has been deleted."));
        $this->expectOutputString($expected2);
        $this->object4->main();
    }
}

